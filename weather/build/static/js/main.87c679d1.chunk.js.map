{"version":3,"sources":["components/Menu/MenuListItem.js","components/Menu/MenuList.js","components/Menu/Menu.js","components/Main.js","index.js"],"names":["MenuListItem","_this$props","this","props","city","chooseCity","choosen","openMenu","menuItemClass","react_default","a","createElement","className","onClick","Component","MenuList","items","cities","choosenCity","map","id","name","MenuListItem_MenuListItem","key","Menu","state","open","_this","setState","_ref","menuBtnClass","menuClass","MenuList_MenuList","Main","inputCity","buttonAdd","buttonClose","buttonDelete","style","weather","advice","showInput","input","checkCity","inputRef","deleteCity","placeholder","maxLength","ref","display","margin","temperature","forecast","wind","humidity","API","App","React","createRef","JSON","parse","localStorage","getItem","cityName","setItem","stringify","trim","toLowerCase","Object","assign","i","length","splice","indexOf","addCity","push","translateForecast","description","translatedForecast","makeAdvice","getWeather","_callee","apiCall","data","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","json","cod","abrupt","Math","floor","main","temp","speed","stop","cityNameToUpperCase","toUpperCase","slice","_callee2","event","_context2","current","value","undefined","classList","remove","contains","add","setAttribute","_ref3","setInterval","prevProps","prevState","_this$state","react","Menu_Menu","Main_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87c679d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class MenuListItem extends Component {\r\n\r\n\trender() {\r\n\t\tconst { city, chooseCity, choosen, openMenu } = this.props;\r\n\t\tlet menuItemClass = 'menu-list-item';\r\n\r\n\t\tif (choosen) menuItemClass += ' choosen';\r\n\r\n\t\treturn (\r\n\t\t\t<div className = { menuItemClass } onClick = {() => { chooseCity(city); openMenu() } }>{ city }</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\n\r\nimport MenuListItem from './MenuListItem';\r\n\r\nexport default class MenuList extends Component {\r\n\r\n\trender() {\r\n\t\tconst { cities, choosenCity, chooseCity, openMenu } = this.props;\r\n\t\tlet items;\r\n\r\n\t\tif (cities !== null) {\r\n\t\t\titems = cities.map((city, id) => {\r\n\t\t\t\tlet choosen = city.name === choosenCity ? true : false;\r\n\t\t\t\treturn <MenuListItem \r\n\t\t\t\t\t\t\tcity = { city.name } \r\n\t\t\t\t\t\t\tchooseCity = { chooseCity } \r\n\t\t\t\t\t\t\tchoosen = { choosen } \r\n\t\t\t\t\t\t\topenMenu = { openMenu }\r\n\t\t\t\t\t\t\tkey = { id }  \r\n\t\t\t\t\t\t/>\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className = 'menu-list'>\r\n\t\t\t\t{ items }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\n\r\nimport MenuList from './MenuList';\r\n\r\nexport default class Menu extends Component {\r\n\r\n\tstate = {\r\n\t\topen: false\r\n\t};\r\n\r\n\topenMenu = () => {\r\n\t\tthis.setState(({ open }) => ({ open: !open }));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { open } = this.state;\r\n\t\tconst { cities, choosenCity, chooseCity } = this.props;\r\n\t\tlet menuBtnClass, menuClass;\r\n\r\n\t\tif (open) {\r\n\t\t\tmenuClass = 'menu-open';\r\n\t\t\tmenuBtnClass = 'menu-btn-close';\r\n\t\t} else {\r\n\t\t\tmenuClass = 'menu-close';\r\n\t\t\tmenuBtnClass = 'menu-btn-open';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className = { menuClass }>\r\n\t\t\t\t<div className = { menuBtnClass } onClick = { this.openMenu }>\r\n\t\t\t\t\t<div className = 'bar'></div>\r\n\t\t\t\t\t<div className = 'bar'></div>\r\n\t\t\t\t\t<div className = 'bar'></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MenuList \r\n\t\t\t\t\tcities = { cities }\r\n\t\t\t\t\tchoosenCity = { choosenCity }\r\n\t\t\t\t\tchooseCity = { chooseCity } \r\n\t\t\t\t\topenMenu = { this.openMenu }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\t","import React, { Component } from 'react';\r\n\r\nexport default class Main extends Component {\r\n\r\n\trender() {\r\n\t\tconst { weather, city, advice, showInput, input, checkCity, inputRef, deleteCity } = this.props;\r\n\t\tlet inputCity, buttonAdd, buttonClose, buttonDelete, style;\r\n\r\n\t\tif (!input && city !== null) {\r\n\t\t\tbuttonAdd = <button className = 'add-city-btn' onClick = { showInput }>Добавить город</button>;\r\n\t\t\tbuttonDelete = <button className = 'delete-city-btn' onClick = { () => deleteCity(city) }>Удалить город</button>\r\n\t\t} else if (input && city === null) {\r\n\t\t\tinputCity = <input \r\n\t\t\t\t\t\t  \tclassName = 'add-city-input'\r\n\t\t\t\t\t\t  \tplaceholder = 'Введите название города' \r\n\t\t\t\t\t\t  \tmaxLength = '30'\r\n\t\t\t\t\t\t  \tref = { inputRef }>\r\n\t\t\t\t\t\t  </input>;\r\n\t\t\tbuttonAdd = <button className = 'add-city-btn' onClick = { checkCity }>Добавить город</button>;\r\n\t\t\tbuttonClose = <button className = 'close-city-btn' onClick = { showInput }>Закрыть</button>;\r\n\t\t\tstyle = { display: 'none' };\r\n\t\t} else if (input) {\r\n\t\t\tinputCity = <input \r\n\t\t\t\t\t\t  \tclassName = 'add-city-input'\r\n\t\t\t\t\t\t  \tplaceholder = 'Введите название города' \r\n\t\t\t\t\t\t  \tmaxLength = '30'\r\n\t\t\t\t\t\t  \tref = { inputRef }>\r\n\t\t\t\t\t\t  </input>;\r\n\t\t\tbuttonAdd = <button className = 'add-city-btn' onClick = { checkCity }>Добавить город</button>;\r\n\t\t\tbuttonClose = <button className = 'close-city-btn' onClick = { showInput }>Закрыть</button>;\r\n\t\t} else if (city === null) {\r\n\t\t\tstyle = { display: 'none' };\r\n\t\t\tbuttonAdd = <button className = 'add-city-btn' style = {{ margin: 'auto' }} onClick = { showInput }>Добавить город</button>;\r\n\t\t} else {\r\n\t\t\tbuttonAdd = <button className = 'add-city-btn' onClick = { showInput }>Добавить город</button>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className = 'main'>\r\n\t\t\t \t<div className = 'main-temperature' style = { style }>\r\n\t\t\t \t\t<div className = 'main-temperature__temp'>\r\n\t\t\t \t\t\t<span>{ weather.temperature }</span>\r\n\t\t\t \t\t</div>\r\n\t\t\t \t\t<div className = 'main-temperature__city'>Сейчас в { city }</div>\r\n\t\t\t \t</div>\r\n\t\t\t \t<div className = 'main-info' style = { style }>\r\n\t\t\t \t\t<div className = 'main-info-item'>\r\n\t\t\t \t\t\t<span className = 'main-info-item__name'>Прогноз</span>\r\n\t\t\t \t\t\t<span className = 'main-info-item__value'>{ weather.forecast }</span>\r\n\t\t\t \t\t</div>\r\n\t\t\t \t\t<div className = 'main-info-item'>\r\n\t\t\t \t\t\t<span className = 'main-info-item__name'>Ветер</span>\r\n\t\t\t \t\t\t<span className = 'main-info-item__value'>{ weather.wind } км/ч</span>\r\n\t\t\t \t\t</div>\r\n\t\t\t \t\t<div className = 'main-info-item'>\r\n\t\t\t \t\t\t<span className = 'main-info-item__name'>Влажность</span>\r\n\t\t\t \t\t\t<span className = 'main-info-item__value'>{ weather.humidity }%</span>\r\n\t\t\t \t\t</div>\r\n\t\t\t \t</div>\r\n\t\t\t \t<div className = 'main-advice' style = { style }>{ advice }</div>\r\n\t\t\t \t{ inputCity }\r\n\t\t\t \t<div className = 'main-buttons'>\r\n\t\t\t\t \t{ buttonAdd }\r\n\t\t\t\t \t{ buttonClose }\r\n\t\t\t\t \t{ buttonDelete }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Menu from './components/Menu/Menu';\nimport Main from './components/Main';\n\nconst API = 'b2cc9493267f825810008255fcb6b733';\n\nclass App extends Component {\n\n\tinputRef = React.createRef();\n\n\tstate = {\n\t\tcities: JSON.parse(localStorage.getItem('cities')),\n\t\tcity: JSON.parse(localStorage.getItem('city')),\n\t\tinput: false,\n\t\ttemperature: null,\n\t\thumidity: null,\n\t\twind: null,\n\t\tforecast: null,\n\t\tadvice: null\n\t};\n\n\tchooseCity = cityName => {\n\t\tconst { city } = this.state;\n\n\t\tif (city === null) {\n\t\t\tlocalStorage.setItem('city', JSON.stringify(cityName.trim()));\n\t\t\tthis.setState({ city: cityName.trim() });\n\t\t} else if (city !== null) {\n\t\t\tif (city.toLowerCase() === cityName.toLowerCase().trim()) return;\n\n\t\t\tlocalStorage.setItem('city', JSON.stringify(cityName.trim()));\n\t\t\tthis.setState({ city: cityName.trim() });\n\t\t}\n\t};\n\n\tdeleteCity = cityName => {\n\t\tlet cities = Object.assign([], JSON.parse(localStorage.getItem('cities')));\n\n\t\tfor (let i = 0; i < cities.length; i++) {\n\t\t\tif (cities[i].name.toLowerCase() === cityName.toLowerCase().trim()) {\n\t\t\t\tcities.splice(cities.indexOf(cities[i]), 1);\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('cities', JSON.stringify(cities));\n\t\tthis.setState({ cities: JSON.parse(localStorage.getItem('cities')) });\n\n\t\tif (cities.length !== 0) {\n\t\t\tthis.chooseCity(cities[0].name);\n\t\t} else {\n\t\t\tthis.setState({ city: null });\n\t\t}\n\t};\n\n\taddCity = cityName => {\n\t\tlet cities = Object.assign([], JSON.parse(localStorage.getItem('cities')));\n\t\t\n\t\tfor (let i = 0; i < cities.length; i++) {\n\t\t\tif (cities[i].name.toLowerCase() === cityName.toLowerCase().trim()) return false;\n\t\t}\n\n\t\tlet city = { name: cityName.trim() };\n\t\tcities.push(city);\n\n\t\tlocalStorage.setItem('cities', JSON.stringify(cities));\n\t\tthis.setState({ cities: JSON.parse(localStorage.getItem('cities')) });\n\n\t\tthis.chooseCity(cityName);\n\t\tthis.showInput();\n\t};\n\n\ttranslateForecast = description => {\n\t\tlet translatedForecast;\n\n\t\tswitch(description) {\n\t\t\tcase 'Clear':\n\t\t\t\ttranslatedForecast = 'ясно';\n\t\t\t\tbreak\n\t\t\tcase 'Clouds':\n\t\t\t\ttranslatedForecast = 'облачно';\n\t\t\t\tbreak\n\t\t\tcase 'Drizzle':\n\t\t\t\ttranslatedForecast = 'легкий дождь';\n\t\t\t\tbreak\n\t\t\tcase 'Rain':\n\t\t\t\ttranslatedForecast = 'дождь';\n\t\t\t\tbreak\n\t\t\tcase 'Thunderstorm':\n\t\t\t\ttranslatedForecast = 'гроза';\n\t\t\t\tbreak\n\t\t\tcase 'Snow':\n\t\t\t\ttranslatedForecast = 'снег';\n\t\t\t\tbreak\n\t\t\tcase 'Mist':\n\t\t\t\ttranslatedForecast = 'туман';\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\ttranslatedForecast = 'неизвестно';\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn translatedForecast\n\t};\n\n\tmakeAdvice = (temperature, wind, forecast) => {\n\t\tlet advice;\n\n\t\tif (temperature >= 26) {\n\t\t\tadvice = 'Оденьте летнюю одежду и возьмите с собой воду';\n\t\t} else if ((temperature >= 11 && temperature <= 25) && (forecast === 'дождь' || forecast === 'легкий дождь' || forecast === 'гроза')) {\n\t\t\tadvice = 'Оденьте весеннюю одежду и возьмите с собой зонтик';\n\t\t} else if ((temperature >= 11 && temperature <= 25)) {\n\t\t\tadvice = 'Оденьте летнюю одежду';\n\t\t} else if ((temperature <= 10 && temperature >= -7) && (forecast === 'дождь' || forecast === 'легкий дождь' || forecast === 'гроза')) {\n\t\t\tadvice = 'Оденьте весеннюю одежду и возьмите с собой зонтик';\n\t\t} else if (temperature <= 10 && temperature >= -7) {\n\t\t\tadvice = 'Оденьте весеннюю одежду';\n\t\t} else if (temperature <= -8 && temperature >= -40) {\n\t\t\tadvice = 'Оденьте теплую зимнию одежду';\n\t\t} else if (wind >= 50 || temperature <= -41) {\n\t\t\tadvice = 'Воздержитесь от выхода из дома';\n\t\t} else if (forecast === 'туман') {\n\t\t\tadvice = 'Воздержитесь от поездок на машине';\n\t\t}\n\n\t\treturn advice\n\t};\n\n\tgetWeather = async () => {\n\t\tconst { city } = this.state;\n\t\tconst apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}`);\n\t\tconst data = await apiCall.json();\n\n\t\tif (data.cod === '404') {\n\t\t\treturn\n\t\t} else {\n\t\t\tconst temperature = Math.floor(data.main.temp - 273.15);\n\t\t\tconst wind = Math.floor(data.wind.speed);\n\t\t\tconst humidity = Math.floor(data.main.humidity);\n\t\t\tconst forecast = this.translateForecast(data.weather[0].main);\n\t\t\tconst advice = this.makeAdvice(temperature, wind, forecast);\n\n\t\t\tthis.setState({\n\t\t\t\ttemperature: temperature,\n\t\t\t\twind: wind,\n\t\t\t\thumidity: humidity,\n\t\t\t\tforecast: forecast,\n\t\t\t\tadvice: advice\n\t\t\t});\n\t\t}\n\t};\n\n\tcityNameToUpperCase = cityName => {\n\t\tif (!cityName) return;\n\t\treturn cityName[0].toUpperCase() + cityName.slice(1);\n\t};\n\n\tcheckCity = async (event) => {\n\t\tlet input = this.inputRef.current;\n\t\tlet cityName = input.value.trim();\n\t\tcityName = this.cityNameToUpperCase(cityName);\n\n\t\tif (cityName === undefined) {\n\t\t\tif (input) input.classList.remove('error');\n\t\t} else {\n\t\t\tconst apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API}`);\n\t\t\tconst data = await apiCall.json();\n\n\t\t\tif (data.cod === '404') {\n\t\t\t\tif (!input.classList.contains('error')) {\n\t\t\t\t\tinput.classList.add('error');\n\t\t\t\t\tinput.setAttribute('placeholder', 'Город не найден');\n\t\t\t\t\tinput.value = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.addCity(cityName)) { \n\t\t\t\t\tinput.setAttribute('placeholder', 'Город уже в списке');\n\t\t\t\t\tinput.value = '';\n\t\t\t\t\tinput.classList.add('error');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tshowInput = () => {\n\t\tthis.setState(({ input }) => ({ input: !input }));\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getWeather();\n\t\tsetInterval(this.getWeather, 10000);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.city !== this.state.city) {\n\t\t\tthis.getWeather();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { cities, city, temperature, wind, humidity, forecast, advice, input } = this.state;\n\n\t\tconst weather = {\n\t\t\ttemperature: temperature,\n\t\t\twind: wind,\n\t\t\thumidity: humidity,\n\t\t\tforecast: forecast\n\t\t};\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Menu \n\t\t\t\t\tcities = { cities }\n\t\t\t\t\tchoosenCity = { city }\n\t\t\t\t\tchooseCity = { this.chooseCity } \n\t\t\t\t/>\n\t\t\t\t<Main \n\t\t\t\t\tweather = { weather } \n\t\t\t\t\tcity = { city } \n\t\t\t\t\tadvice = { advice } \n\t\t\t\t\tcheckCity = { this.checkCity }\n\t\t\t\t\tinput = { input }\n\t\t\t\t\tshowInput = { this.showInput }\n\t\t\t\t\tinputRef = { this.inputRef }\n\t\t\t\t\tdeleteCity = { this.deleteCity }\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}